- name: Install Tomcat 10

  hosts:
    - database_mariadb
    
  gather_facts: false
  
  vars_files:
    - variables/provision.yml
    - variables/secrets.yml

  vars:
     ansible_python_interpreter: "{{ aws.instance.python.install.dir.path }}/{{ aws.instance.python.executable }}"
     PYTHON_VERSION: "{{ aws.instance.python.version }}"
     MARIADB_VERSION: "{{ aws.instance.mariadb.version }}"  
    
  pre_tasks:
  
    - name: Python version
      ansible.builtin.shell: '{{ aws.instance.python.install.dir.path }}/{{ aws.instance.python.executable }} -V'
      register: python_ver
      ignore_errors: true
      
    - assert:
        that:
          - PYTHON_VERSION in python_ver.stdout           
       
    - name: Configuration variables
      ansible.builtin.debug:
        msg:
          - 'SSH instance port: {{ ansible_port }}'
          - 'SSH instance user: {{ ansible_user }}'
          - 'SSH instance key: {{ ansible_private_key_file }}'
          - 'Python version: {{ PYTHON_VERSION }}'
          - 'MariaDB version: {{ MARIADB_VERSION }}'

    - name: Fetch MariaDB version
      shell: mariadb --version 2>&1 | awk '{print $3}' | sed 's/"//g'
      register: mariadb_version
         
    - name: End the play if MariaDB is installed
      ansible.builtin.meta: end_play
      when:
        - (mariadb_version.stdout | int > 0) and (mariadb_version.stdout is version_compare(MARIADB_VERSION, '>='))     
                                                
  tasks:

    - name: Installs a list of packages
      become: true
      ansible.builtin.yum:
        name:
          - python3-devel
          - mysql-devel
      
    - name: Install mysqlclient
      become: true
      pip: name=mysqlclient  
      
    - name: Add Amazon linux extras MariaDB repository
      become: true
      ansible.builtin.command: 'amazon-linux-extras enable mariadb{{ MARIADB_VERSION }}'

    - name: Clean yum metadata
      become: true
      ansible.builtin.command: 'yum clean metadata'  

    - name: Install MariaDB
      become: true
      ansible.builtin.command: 'yum install -y mariadb'       
      
    - name: Start MariaDB server
      become: true  
      ansible.builtin.systemd_service:
        state: restarted
        enabled: true
        name: mariadb 
        
    - name: Adds Python MySQL support on RedHat/CentOS
      yum: name=MySQL-python state=present
      when: ansible_os_family == 'RedHat'        
        
    - name: Sets the root password 
      become: true 
      community.mysql.mysql_user: user=root password="{{ mariadb_root_user_password }}" host=localhost
      no_log: false
      
    - name: Deletes anonymous MySQL server user for ansible_fqdn
      community.mysql.mysql_user: user="" host="{{ ansible_fqdn }}" state="absent"

    - name: Deletes anonymous MySQL server user for localhost
      community.mysql.mysql_user: user="" state="absent"   
      
    - name: Secures the MySQL root user for IPV6 localhost (::1)
      community.mysql.mysql_user: user="root" password="{{ mariadb_root_user_password }}" host="::1"
      no_log: false

    - name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
      community.mysql.mysql_user: user="root" password="{{ mariadb_root_user_password }}" host="127.0.0.1"
      no_log: false 

    - name: Secures the MySQL root user for localhost domain (localhost)
      community.mysql.mysql_user: user="root" password="{{ mariadb_root_user_password }}" host="localhost"
      no_log: false 

    - name: Secures the MySQL root user for server_hostname domain
      community.mysql.mysql_user: user="root" password="{{ mariadb_root_user_password }}" host="{{ ansible_fqdn }}"
      no_log: false
    
    - name: Removes the MySQL test database
      community.mysql.mysql_user: db=test state=absent                           

    - name: Start MariaDB server
      become: true  
      ansible.builtin.systemd_service:
        state: restarted
        enabled: true
        name: mariadb  
                 
  post_tasks:
  
 
                
                      
