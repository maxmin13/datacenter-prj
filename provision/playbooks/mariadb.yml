- name: Install MariaDB

  hosts:
    - database_mariadb
    
  gather_facts: true
  
  vars_files:
    - variables/provision.yml
    - variables/secrets.yml

  vars:
     ansible_python_interpreter: "{{ aws.instance.python.install.dir.path }}/{{ aws.instance.python.executable }}"
     PYTHON_VERSION: "{{ aws.instance.python.version }}"
     MARIADB_VERSION: "{{ aws.instance.mariadb.version }}"  
    
  pre_tasks:
         
    - name: Fetch MariaDB version
      shell: mariadb --version 2>&1 | awk '{print $3}' | sed 's/"//g'
      register: mariadb_version
         
    - name: End the play if MariaDB is installed
      ansible.builtin.meta: end_play
      when:
        - (mariadb_version.stdout | int > 0) and (mariadb_version.stdout is version_compare(MARIADB_VERSION, '>='))  
        
    - name: Python version
      ansible.builtin.shell: '{{ aws.instance.python.install.dir.path }}/{{ aws.instance.python.executable }} -V'
      register: python_ver
      ignore_errors: true
                 
    - assert:
        that:
          - PYTHON_VERSION in python_ver.stdout                

    - name: Configuration variables
      ansible.builtin.debug:
        msg:
          - 'SSH instance port: {{ ansible_port }}'
          - 'SSH instance user: {{ ansible_user }}'
          - 'SSH instance key: {{ ansible_private_key_file }}'
          - 'Python version: {{ PYTHON_VERSION }}'
          - 'MariaDB version: {{ MARIADB_VERSION }}'
                                                          
  tasks:

    - name: Install a list of packages
      become: true
      ansible.builtin.yum:
        name:
          - python3-devel
          - mysql-devel
      
    - name: Install PyMySQL
      become: true
      pip: name=PyMySQL
   
    - name: Add Amazon linux extras MariaDB repository
      become: true
      ansible.builtin.command: 'amazon-linux-extras enable mariadb{{ MARIADB_VERSION }}'

    - name: Clean yum metadata
      become: true
      ansible.builtin.command: 'yum clean metadata'  

    - name: Install MariaDB
      become: true
      ansible.builtin.command: 'yum install -y mariadb'   
      
    - name: Upload MariaDB configuration file
      become: true
      copy:
        src: mariadb/mariadb-server.cnf
        dest: "{{ aws.instance.mariadb.config.dir.path }}"
        mode: '0644'          
      
    - name: Start MariaDB server
      become: true  
      ansible.builtin.systemd_service:
        state: restarted
        enabled: true
        name: mariadb 

    - name: Set Mariadb root password
      become: true
      ignore_errors: true
      community.mysql.mysql_user:
        check_implicit_admin: true
        name: root
        host: "localhost"
        password: "{{ mariadb_root_user_password }}"
        login_unix_socket: /var/lib/mysql/mysql.sock
        login_user: "root"
        login_password: "{{ mariadb_root_user_password }}"
        state: present
           
    - name: Delete anonymous MySQL server user for ansible_hostname
      community.mysql.mysql_user: 
        name: ''
        host: "{{ ansible_hostname }}"
        state: absent
        login_user: root
        login_password: "{{ mariadb_root_user_password }}"

    - name: Delete anonymous MySQL server user for localhost
      community.mysql.mysql_user: 
        name: ''
        state: absent
        login_user: root
        login_password: "{{ mariadb_root_user_password }}"       
      
    - name: Allow root to remote connect from every host (for phpMyadmin)
      community.mysql.mysql_user:
        user: root
        password: "{{ mariadb_root_user_password }}"
        login_user: root
        login_password: "{{ mariadb_root_user_password }}"  
        priv: '*.*:ALL,GRANT'
        host: "%"
      no_log: false
    
    - name: Remove the MySQL test database
      community.mysql.mysql_db:
        db: test
        state: absent         
        login_user: root
        login_password: "{{ mariadb_root_user_password }}"                       

    - name: Start MariaDB server
      become: true  
      ansible.builtin.systemd_service:
        state: restarted
        enabled: true
        name: mariadb  
