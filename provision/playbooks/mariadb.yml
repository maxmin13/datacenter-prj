- name: Install Tomcat 10

  hosts:
    - database_mariadb
    
  gather_facts: false
  
  vars_files:
    - variables/provision.yml
    - variables/secrets.yml

  vars:
     MARIADB_VERSION: "{{ aws.instance.mariadb.version }}"  
    
  pre_tasks:
       
    - name: Configuration variables
      ansible.builtin.debug:
        msg:
          - 'SSH instance port: {{ ansible_port }}'
          - 'SSH instance user: {{ ansible_user }}'
          - 'SSH instance key: {{ ansible_private_key_file }}'
          - 'MariaDB version: {{ MARIADB_VERSION }}'

    - name: Fetch MariaDB version
      shell: mariadb --version 2>&1 | awk '{print $3}' | sed 's/"//g'
      register: mariadb_version
         
    - name: End the play if MariaDB is installed
      ansible.builtin.meta: end_play
      when:
        - (mariadb_version.stdout | int > 0) and (mariadb_version.stdout is version_compare(MARIADB_VERSION, '>='))     
                                                
  tasks:
      
    - name: Add Amazon linux extras MariaDB repository
      become: true
      ansible.builtin.command: 'amazon-linux-extras enable mariadb{{ MARIADB_VERSION }}'

    - name: Clean yum metadata
      become: true
      ansible.builtin.command: 'yum clean metadata'  

    - name: Install MariaDB
      become: true
      ansible.builtin.command: 'yum install -y mariadb'       
      
    - name: Start MariaDB server
      become: true  
      ansible.builtin.systemd_service:
        state: restarted
        enabled: true
        name: mariadb 
        
    - name: Secure MariaDB
      become: true
      expect:
        command: mysql_secure_installation
        responses:
          'Enter current password for root': ''
          'Set root password': '{{ mariadb_root_user_password }}'
          'Remove anonymous users': 'y'
          'Disallow root login remotely': 'y'
          'Remove test database': 'y'
          'Reload privilege tables now': 'y'
        timeout: 1
      register: secure_mariadb
      failed_when: "'... Failed!' in secure_mariadb.stdout_lines"               

    - name: Start MariaDB server
      become: true  
      ansible.builtin.systemd_service:
        state: restarted
        enabled: true
        name: mariadb  
                 
  post_tasks:
  
 
                
                      
