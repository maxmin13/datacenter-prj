- name: Install phpMyadmin

  hosts:
    - utility_programs
    
  gather_facts: true
  
  vars_files:
    - variables/provision.yml

  vars:
     ansible_python_interpreter: "{{ aws.instance.python.install.dir.path }}/{{ aws.instance.python.executable }}"
     PYTHON_VERSION: "{{ aws.instance.python.version }}"
     MARIADB_VERSION: "{{ aws.instance.mariadb.version }}"  
     DOCKER_VERSION: "{{ aws.instance.docker.version }}"  
    
  pre_tasks:
  
    - name: Get datacenter.json content
      set_fact:
        datacenter_config: "{{ lookup('file', '{{ datacenter_dir }}/config/datacenter.json') | from_json }}"
          
    - name: Get instance DNS domain
      set_fact:
        instance_dns_domain: '{{ datacenter_config | json_query(jquery) }}'
      vars:
        jquery: 'Datacenter.Instances[?Name==''{{ instance_name }}''] | [0].DnsDomain'    
         
    - name: Python version
      ansible.builtin.shell: '{{ aws.instance.python.install.dir.path }}/{{ aws.instance.python.executable }} -V'
      register: python_ver
      ignore_errors: true
                 
    - assert:
        that:
          - PYTHON_VERSION in python_ver.stdout                

    - name: Docker version
      ansible.builtin.shell: 'docker -v'
      register: docker_ver
      ignore_errors: true
                 
    - assert:
        that:
          - DOCKER_VERSION in docker_ver.stdout   

    - name: Configuration variables
      ansible.builtin.debug:
        msg:
          - 'SSH instance port: {{ ansible_port }}'
          - 'SSH instance user: {{ ansible_user }}'
          - 'SSH instance key: {{ ansible_private_key_file }}'
          - 'Python version: {{ PYTHON_VERSION }}'
          - 'Docker version: {{ DOCKER_VERSION }}'
                                                          
  tasks:
  
    - name: Create a phpMyadmin container
      community.docker.docker_container:
        name: phpMyadmin
        image: phpmyadmin  
        ports:
          - "{{ aws.instance.phpmyadmin.http.port }}:80"
        env:
          PMA_HOST: "{{ instance_dns_domain }}"
    
