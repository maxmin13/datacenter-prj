
###################################
# AWS credentials:
###################################

Login in AWS management console as root,
go to Iam, Users,
create a new user,
provide the user with access to the AWS Management Console.
Select the user and create an access key for Command Line Interface (CLI).
Associate the user with an identity-based policy that allows access to route53 webservices,
for ex: AmazonRoute53FullAccess
Associate the user with an identity-based policy that allows access to ec2 webservices,
for ex: AmazonEC2FullAccess.
e
In you terminal, install AWS Command Line Interface (CLI)

enter the access key, the secret access key, your AWS region:

aws configure

###################################
# clone the project from github
###################################

git clone git@github.com:maxmin13/datacenter-prj.git

###################################
# configure the project in eclipse
###################################

install eclipse pydev plugin from marketplace.

select pydev perspective

File/New/Project (not PyDev project)
Choose General/Project, click Next
Enter a project name
Uncheck "use default location" and set the location to the top directory of the datacenter-prj
Click Finish

Right-click on the project and select PyDev / Set as Pydev Project
when asked to select Python interpreter, click don't ask again
Right-click on the project and select Properties
go to PyDev - PYTHONPATH
In the Source Folders tab, use "Add source folder" to add folders that need to be on your python path for your project to work:
src, tests

#################################################
# create a virtual environment with python 3.11:
#################################################

cd datacenter-prj

python -m venv ".venv"
source .venv/bin/activate

# Software required:

python -m pip install ansible~=9.3.0
python -m pip install botocore~=1.34.61
python -m pip install boto3~=1.34.62
python -m pip install pytest~=8.1.1
python -m pip install moto[all]~=5.0.2

# Development software:

python -m pip install black~=23.7.0
python -m pip install flake8
python -m pip install pycodestyle

###################################
# Using PyDev with virtualenv
###################################

add the interpreter from the virtual environment as another Python interpreter:

Menu Window, click Preferences, 
Go to PyDev - Interpreters - Python interpreter
In Python Interpreters section click New,
select "Browse for python/pypy exe", click "cancel" to close the browse file window,
enter a name, and the path to the python executable previously created from the command line, ex:
/home/vagrant/workspace/datacenter-prj/.venv/bin/python3
select all libraries
Click Apply and Close

Then, set the new interpreter as the interpreter for your project:

Right-click the project and select Properties
Go to Pydev - Interpreter/Grammar
Under Interpreter, select your new interpreter
Click Apply and Close

###################################
# Run the tests:
###################################

export AWS_ACCESS_KEY_ID=xxxxxx
export AWS_SECRET_ACCESS_KEY=yyyyyy
export AWS_DEFAULT_REGION=zzzzzz

cd /home/vagrant/workspace/datacenter-prj/bin/test

chmod +x tests.sh
./tests.sh

###################################
# Run the tests in Eclipse:
###################################

Open Window, Preferences
Go to PyDev/PyUnit

set Test Runner as Py.test runner

in the run configuration of test_instance.py, 
select Environment tab, add variables:

DATACENTER_DIR with value /home/vagrant/workspace/datacenter-prj
AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY
AWS_DEFAULT_REGION

to have PyUnit print better to the console:
select  Arguments tab, check "Override PyUnit preferences for this launch", add in the Py.test input box: --verbosity 0 -s

right click on the test file, run as, Python unit-tests

###################################
# Run the project in Eclipse:
###################################

tdx on startup.py or shutdown.py
Run As, Run Configurations, 
select Argument tab,
in Program Arguments box enter:
/home/vagrant/workspace/datacenter-prj/config/datacenter.json /home/vagrant/workspace/datacenter-prj/config/hostedzone.json

select Environment tab:
create variables:

DATACENTER_DIR and value /home/vagrant/workspace/datacenter-prj
PYTHONPATH and value /home/vagrant/workspace/datacenter-prj/project/src
AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY
AWS_DEFAULT_REGION

Run As, Python run

###################################
# Run aws scripts:
###################################

# create aws datacenter
cd datacenter-prj/bin

./make.sh

# delete aws datacenter
cd datacenter-prj/bin

./make.sh 

###################################
# Provision the instances:
###################################

export AWS_ACCESS_KEY_ID=xxxxxx
export AWS_SECRET_ACCESS_KEY=yyyyyy
export AWS_DEFAULT_REGION=zzzzzz

cd provision

cd datacenter-prj/bin

./provision.sh





